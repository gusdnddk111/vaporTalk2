{
  "_args": [
    [
      {
        "raw": "@google-cloud/language@https://registry.npmjs.org/@google-cloud/language/-/language-0.10.4.tgz",
        "scope": "@google-cloud",
        "escapedName": "@google-cloud%2flanguage",
        "name": "@google-cloud/language",
        "rawSpec": "https://registry.npmjs.org/@google-cloud/language/-/language-0.10.4.tgz",
        "spec": "https://registry.npmjs.org/@google-cloud/language/-/language-0.10.4.tgz",
        "type": "remote"
      },
      "C:\\Users\\admin\\WebstormProjects\\vaporTalk2\\node_modules\\google-cloud"
    ]
  ],
  "_from": "@google-cloud/language@>=0.10.0 <0.11.0",
  "_id": "@google-cloud/language@0.10.4",
  "_inCache": true,
  "_location": "/google-cloud/@google-cloud/language",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@google-cloud/language@https://registry.npmjs.org/@google-cloud/language/-/language-0.10.4.tgz",
    "scope": "@google-cloud",
    "escapedName": "@google-cloud%2flanguage",
    "name": "@google-cloud/language",
    "rawSpec": "https://registry.npmjs.org/@google-cloud/language/-/language-0.10.4.tgz",
    "spec": "https://registry.npmjs.org/@google-cloud/language/-/language-0.10.4.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/google-cloud"
  ],
  "_resolved": "https://registry.npmjs.org/@google-cloud/language/-/language-0.10.4.tgz",
  "_shasum": "fc3e5dea1d72b5f6711ffc4ca767813403793333",
  "_shrinkwrap": null,
  "_spec": "@google-cloud/language@https://registry.npmjs.org/@google-cloud/language/-/language-0.10.4.tgz",
  "_where": "C:\\Users\\admin\\WebstormProjects\\vaporTalk2\\node_modules\\google-cloud",
  "author": {
    "name": "Google Inc."
  },
  "bugs": {
    "url": "https://github.com/googlecloudplatform/google-cloud-node/issues"
  },
  "contributors": [
    {
      "name": "Burcu Dogan",
      "email": "jbd@google.com"
    },
    {
      "name": "Johan Euphrosine",
      "email": "proppy@google.com"
    },
    {
      "name": "Patrick Costello",
      "email": "pcostell@google.com"
    },
    {
      "name": "Ryan Seys",
      "email": "ryan@ryanseys.com"
    },
    {
      "name": "Silvano Luciani",
      "email": "silvano@google.com"
    },
    {
      "name": "Stephen Sawchuk",
      "email": "sawchuk@gmail.com"
    }
  ],
  "dependencies": {
    "@google-cloud/common": "^0.13.0",
    "extend": "^3.0.0",
    "google-gax": "^0.13.0",
    "google-proto-files": "^0.11.0",
    "is": "^3.0.1",
    "string-format-obj": "^1.1.0"
  },
  "description": "Cloud Natural Language Client Library for Node.js",
  "devDependencies": {
    "@google-cloud/storage": "*",
    "mocha": "^3.0.2",
    "proxyquire": "^1.7.10",
    "through2": "^2.0.1",
    "uuid": "^3.0.1"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "files": [
    "src",
    "AUTHORS",
    "CONTRIBUTORS",
    "COPYING"
  ],
  "homepage": "https://github.com/googlecloudplatform/google-cloud-node#readme",
  "keywords": [
    "google apis client",
    "google api client",
    "google apis",
    "google api",
    "google",
    "google cloud platform",
    "google cloud",
    "cloud",
    "google cloud natural language",
    "google cloud language",
    "natural language",
    "language"
  ],
  "license": "Apache-2.0",
  "main": "./src/index.js",
  "name": "@google-cloud/language",
  "optionalDependencies": {},
  "readme": "# @google-cloud/language ([Beta][versioning])\r\n> Cloud Natural Language Client Library for Node.js\r\n\r\n*Looking for more Google APIs than just Natural Language? You might want to check out [`google-cloud`][google-cloud].*\r\n\r\n- [API Documentation][gcloud-language-docs]\r\n- [Official Documentation][cloud-language-docs]\r\n\r\n\r\n```sh\r\n$ npm install --save @google-cloud/language\r\n```\r\n```js\r\nvar language = require('@google-cloud/language')({\r\n  projectId: 'grape-spaceship-123',\r\n  keyFilename: '/path/to/keyfile.json'\r\n});\r\n\r\n// Get the entities from a sentence.\r\nlanguage.detectEntities('Stephen of Michigan!', function(err, entities) {\r\n  // entities = [\r\n  //   {\r\n  //     name: 'Stephen',\r\n  //     type: 'PERSON',\r\n  //     metadata: {\r\n  //       mid: '/m/05d8y4q'\r\n  //     },\r\n  //     salience: 0.7309288382530212,\r\n  //     mentions: [\r\n  //       {\r\n  //         text: {\r\n  //           content: 'Stephen',\r\n  //           beginOffset: -1\r\n  //         },\r\n  //         type: 'PROPER'\r\n  //       }\r\n  //     ]\r\n  //   },\r\n  //   // ...\r\n  // ]\r\n});\r\n\r\n// Create a document if you plan to run multiple detections.\r\nvar document = language.document('Contributions welcome!');\r\n\r\n// Analyze the sentiment of the document.\r\ndocument.detectSentiment(function(err, sentiment) {\r\n  // sentiment = {\r\n  //   magnitude: 0.30000001192092896,\r\n  //   score: 0.30000001192092896\r\n  // }\r\n});\r\n\r\n// Parse the syntax of the document.\r\ndocument.annotate(function(err, annotation) {\r\n  // annotation = {\r\n  //   language: 'en',\r\n  //   sentiment: {\r\n  //     magnitude: 0.30000001192092896,\r\n  //     score: 0.30000001192092896\r\n  //   },\r\n  //   entities: [\r\n  //     {\r\n  //       name: 'Contributions',\r\n  //       type: 'OTHER',\r\n  //       metadata: {},\r\n  //       salience: 1,\r\n  //       mentions: [\r\n  //         {\r\n  //           text: {\r\n  //             content: 'Contributions',\r\n  //             beginOffset: -1\r\n  //           },\r\n  //           type: 'COMMON'\r\n  //         }\r\n  //       ]\r\n  //     }\r\n  //   ],\r\n  //   sentences: [\r\n  //     {\r\n  //       text: {\r\n  //         content: 'Contributions welcome!',\r\n  //         beginOffset: -1\r\n  //       },\r\n  //       sentiment: {\r\n  //         magnitude: 0.30000001192092896,\r\n  //         score: 0.30000001192092896\r\n  //       }\r\n  //     }\r\n  //   ],\r\n  //   tokens: [\r\n  //     {\r\n  //       text: {\r\n  //         content: 'Contributions',\r\n  //         beginOffset: -1\r\n  //       },\r\n  //       partOfSpeech: {\r\n  //         tag: 'NOUN',\r\n  //         aspect: 'ASPECT_UNKNOWN',\r\n  //         case: 'CASE_UNKNOWN',\r\n  //         form: 'FORM_UNKNOWN',\r\n  //         gender: 'GENDER_UNKNOWN',\r\n  //         mood: 'MOOD_UNKNOWN',\r\n  //         number: 'PLURAL',\r\n  //         person: 'PERSON_UNKNOWN',\r\n  //         proper: 'PROPER_UNKNOWN',\r\n  //         reciprocity: 'RECIPROCITY_UNKNOWN',\r\n  //         tense: 'TENSE_UNKNOWN',\r\n  //         voice: 'VOICE_UNKNOWN'\r\n  //       },\r\n  //       dependencyEdge: {\r\n  //         headTokenIndex: 1,\r\n  //         label: 'NSUBJ'\r\n  //       },\r\n  //       lemma: 'contribution'\r\n  //     },\r\n  //     // ...\r\n  //   ]\r\n  // }\r\n});\r\n\r\n// Promises are also supported by omitting callbacks.\r\ndocument.annotate().then(function(data) {\r\n  var annotations = data[0];\r\n});\r\n\r\n// It's also possible to integrate with third-party Promise libraries.\r\nvar language = require('@google-cloud/language')({\r\n  promise: require('bluebird')\r\n});\r\n```\r\n\r\n\r\n## Authentication\r\n\r\nIt's incredibly easy to get authenticated and start using Google's APIs. You can set your credentials on a global basis as well as on a per-API basis. See each individual API section below to see how you can auth on a per-API-basis. This is useful if you want to use different accounts for different Cloud services.\r\n\r\n### On Google Cloud Platform\r\n\r\nIf you are running this client on Google Cloud Platform, we handle authentication for you with no configuration. You just need to make sure that when you [set up the GCE instance][gce-how-to], you add the correct scopes for the APIs you want to access.\r\n\r\n``` js\r\nvar language = require('@google-cloud/language')();\r\n// ...you're good to go!\r\n```\r\n\r\n### Elsewhere\r\n\r\nIf you are not running this client on Google Cloud Platform, you need a Google Developers service account. To create a service account:\r\n\r\n1. Visit the [Google Developers Console][dev-console].\r\n2. Create a new project or click on an existing project.\r\n3. Navigate to  **APIs & auth** > **APIs section** and turn on the following APIs (you may need to enable billing in order to use these services):\r\n  * Google Cloud Natural Language API\r\n4. Navigate to **APIs & auth** >  **Credentials** and then:\r\n  * If you want to use a new service account key, click on **Create credentials** and select **Service account key**. After the account key is created, you will be prompted to download the JSON key file that the library uses to authenticate your requests.\r\n  * If you want to generate a new service account key for an existing service account, click on **Generate new JSON key** and download the JSON key file.\r\n\r\n``` js\r\nvar projectId = process.env.GCLOUD_PROJECT; // E.g. 'grape-spaceship-123'\r\n\r\nvar language = require('@google-cloud/language')({\r\n  projectId: projectId,\r\n\r\n  // The path to your key file:\r\n  keyFilename: '/path/to/keyfile.json'\r\n\r\n  // Or the contents of the key file:\r\n  credentials: require('./path/to/keyfile.json')\r\n});\r\n\r\n// ...you're good to go!\r\n```\r\n\r\n\r\n[versioning]: https://github.com/GoogleCloudPlatform/google-cloud-node#versioning\r\n[google-cloud]: https://github.com/GoogleCloudPlatform/google-cloud-node/\r\n[gce-how-to]: https://cloud.google.com/compute/docs/authentication#using\r\n[dev-console]: https://console.developers.google.com/project\r\n[gcloud-language-docs]: https://googlecloudplatform.github.io/google-cloud-node/#/docs/language\r\n[cloud-language-docs]: https://cloud.google.com/natural-language/docs\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/googlecloudplatform/google-cloud-node.git"
  },
  "scripts": {
    "publish-module": "node ../../scripts/publish.js language",
    "system-test": "mocha system-test/*.js --no-timeouts --bail",
    "test": "mocha test/*.js"
  },
  "version": "0.10.4"
}
